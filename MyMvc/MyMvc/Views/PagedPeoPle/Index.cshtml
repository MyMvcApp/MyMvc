@model PagedList.IPagedList<MyMvc.Models.Models.PagedPeoPle>
@using PagedList.Mvc; 

@{
    ViewBag.Title = "PagedPeoPle";
}
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm()) 
{
    <p>Enter you name:@Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />

    </p>
}
<table>
    <tr>
        <th>
            Name
        </th>
        <th>
             @Html.ActionLink("Age", "Index", new { sortOrder = ViewBag.AgeSortParm , currentFilter=ViewBag.CurrentFilter})
        </th>
        <th>
            Sex
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Age)
        </td>
        <td>@Html.DisplayFor(modelItem => item.Sex)
        </td>
        <td>
        </td>
    </tr>
}
</table>
<div>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)of @Model.PageCount 
@Html.PagedListPager( Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter }) )
@*    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
        @Html.Raw(" ");
        @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
    }
    else
    {
        @:<<
        @Html.Raw(" ");
        @:< Prev
    }
     
    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
        @Html.Raw(" ");
        @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
    }
    else
    {
        @:Next >
        @Html.Raw(" ")
        @:>>
    }*@
</div>
